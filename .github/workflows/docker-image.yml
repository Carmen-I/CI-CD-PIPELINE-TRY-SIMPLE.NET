name: Build and Push All Projects to GHCR

on:
  push:
    branches:
      - main  # Runs when changes are pushed to the main branch
  pull_request:
    branches:
      - main  # Runs on pull requests to the main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      OWNER: ${{ github.repository_owner }} # Your GitHub username or organization

    steps:
      # 1. Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up .NET
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0' # Specify your .NET version

      # 3. Find all .csproj files and process each one
      - name: Find and Process All Projects
        run: |
          # Find all .csproj files
          for project in $(find . -name '*.csproj'); do
            echo "Processing project: $project"
            # Restore dependencies
            dotnet restore $project
            # Build the project
            dotnet build $project --configuration Release --no-restore
            # Publish the project to an output directory
            publish_dir="./out/$(basename $project .csproj)"
            dotnet publish $project --configuration Release --output $publish_dir
            # Generate a Dockerfile dynamically for each project
            cat > $publish_dir/Dockerfile <<EOF
          FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
          WORKDIR /app
          COPY $publish_dir ./
          EXPOSE 8080
          ENTRYPOINT ["dotnet", "$(basename $project .csproj).dll"]
          EOF
            # Log in to GHCR using your secret key
            echo "${{ secrets.SECRET_NAME }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
            # Build and push Docker image
            image_name="${{ env.REGISTRY }}/$(echo ${{ env.OWNER }} | tr '[:upper:]' '[:lower:]')/$(basename $project .csproj | tr '[:upper:]' '[:lower:]'):latest"
            docker build -t $image_name .
            docker push $image_name
          done
